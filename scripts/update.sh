#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# update.sh
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# ‰ΩøÁî®‚ÄúÊó∂Èó¥Êà≥Êñá‰ª∂‚ÄùÊñπÂºèÔºå‰ªÖÂ§ÑÁêÜËá™‰∏äÊ¨°ËÑöÊú¨ËøêË°å‰ª•Êù•ÁúüÊ≠£Ë¢´‰øÆÊîπËøáÁöÑ
#  .md Âíå public ‰∏ãÁîüÊàêÊñá‰ª∂ÔºåÂ∞ÜÂÖ∂‰∏≠ÁöÑ "../../static" ÊõøÊç¢‰∏∫
#  "https://tzj2006.github.io"ÔºåÂÜçÊèê‰∫§ÔºàÊàñÊé®ÈÄÅÔºâpublic„ÄÇ
#
# ÊØèË∑ë‰∏ÄÊ¨°ËÑöÊú¨ÔºåÊúÄÂêé‰ºöÊõ¥Êñ∞ .last_build Êó∂Èó¥Êà≥„ÄÇ‰∏ãÊ¨°ÂÜçËøêË°åÊó∂Ôºå
# Âè™‰ºöÈíàÂØπÈÇ£‰∫õÊØî .last_build Êõ¥Êñ∞ËøáÁöÑÊñá‰ª∂ÂÅöÂ§ÑÁêÜÂíåÊõøÊç¢ÔºåËäÇÁúÅÊó∂Èó¥„ÄÇ
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

set -e

# ‚îÄ‚îÄ‚îÄ ÈÖçÁΩÆÂå∫ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
SRC_DIR="content"                   # Â≠òÊîæ .md ÁöÑÊ†πÁõÆÂΩï
IMAGE_DIR="static/images"           # ÂõæÁâáÁöÑÊ†πÁõÆÂΩï
PUBLIC_DIR="public"                 # Hugo ËæìÂá∫ÁõÆÂΩïÔºà‰πüÊòØ git ‰ªìÂ∫ìÔºâ
TIMESTAMP_FILE=".last_build"        # ËÆ∞ÂΩï‚Äú‰∏äÊ¨°ÊûÑÂª∫Êó∂Èó¥‚ÄùÁöÑÊñá‰ª∂
REPLACEMENT="https://tzj2006.github.io"           # "../../static" ‚Üí Ê≠§Â≠óÁ¨¶‰∏≤
PATTERN='\.\./\.\./static'          # sed ‰∏≠Áî®ÁöÑÊ≠£Âàô
COMPRESS_SCRIPT="compress_image.py" # ÂéãÁº©ËÑöÊú¨Ë∑ØÂæÑ
COMMIT_MESSAGE="update website: $(date '+%Y-%m-%d %H:%M:%S')"
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# Ëã•Êó†Êó∂Èó¥Êà≥Êñá‰ª∂ÔºåÂàôÂàõÂª∫‰∏Ä‰∏™Âæà‰πÖ‰ª•ÂâçÁöÑÊó∂Èó¥Êà≥
if [ ! -f "$TIMESTAMP_FILE" ]; then
  echo "‚ö†Ô∏è  Êú™Ê£ÄÊµãÂà∞Êó∂Èó¥Êà≥Êñá‰ª∂ '$TIMESTAMP_FILE'ÔºåÂ∞ÜÂÖ∂ÂàõÂª∫‰∏∫ÂàùÂßãÁä∂ÊÄÅ„ÄÇ"
  TEN_YEARS_AGO=$(date -v -10y +"%Y%m%d%H%M") || TEN_YEARS_AGO=""
  if [ -n "$TEN_YEARS_AGO" ]; then
    touch -t "$TEN_YEARS_AGO" "$TIMESTAMP_FILE" 2>/dev/null || :
  fi
  # Â¶ÇÊûú‰∏äÈù¢Â§±Ë¥•ÔºåÂàôÈÄÄËÄåÊ±ÇÂÖ∂Ê¨°
  [ -f "$TIMESTAMP_FILE" ] || touch "$TIMESTAMP_FILE"
  echo "  ‚Ü≥ Â∑≤ÂàõÂª∫ÊóßÊó∂Èó¥Êà≥Ôºå‰∏ãÊ¨°‰ªÖÂ§ÑÁêÜÁúüÊ≠£Êñ∞ÊîπÂä®ÁöÑÊñá‰ª∂„ÄÇ"
fi

echo
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
echo "‚ñ∂ Step 1/6ÔºöÊ£ÄÊü• content/ ‰∏ãÂì™‰∫õ .md Êñá‰ª∂Ëá™‰∏äÊ¨°ÊûÑÂª∫‰ª•Êù•Ë¢´‰øÆÊîπÔºö"
MODIFIED_MD=$(find "$SRC_DIR" -type f -name '*.md' -newer "$TIMESTAMP_FILE")

if [ -n "$MODIFIED_MD" ]; then
  echo "  ‰ª•‰∏ã Markdown Ê∫êÊñá‰ª∂Ë¢´Ê£ÄÊµãÂà∞‚ÄúÂ∑≤‰øÆÊîπ‚ÄùÔºö"
  echo "$MODIFIED_MD"
  echo
  echo "  ‚ñ∂ Ê≠£Âú®Êää '../../static' ‚Üí '$REPLACEMENT' Âπ∂Â∞Ü *.jpg/*.jpeg Êâ©Â±ïÊîπ‰∏∫ .png ‚Ä¶"
  while IFS= read -r mdfile; do
    [ -f "$mdfile" ] || continue
    if sed --version >/dev/null 2>&1; then
      sed -i "s|${PATTERN}|${REPLACEMENT}|g" "$mdfile"
      sed -i "s|\.\(jpg\|jpeg\)|.png|g" "$mdfile"
    else
      sed -i '' "s|${PATTERN}|${REPLACEMENT}|g" "$mdfile"
      sed -i '' "s|\.\(jpg\|jpeg\)|.png|g" "$mdfile"
    fi
    echo "    ‚úî Â∑≤Â§ÑÁêÜÔºö${mdfile}"
  done <<< "$MODIFIED_MD"
else
  echo "  ‚ñ≤ ÊöÇÊó† .md Êñá‰ª∂Ëá™‰∏äÊ¨°ÊûÑÂª∫‰ª•Êù•ÂèëÁîüÊîπÂä®ÔºåË∑≥ËøáÊ≠§Ê≠•„ÄÇ"
fi

echo
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
echo "‚ñ∂ Step 2/6ÔºöÊ£ÄÊü•Âπ∂ÂéãÁº© static/ ‰∏ã‰øÆÊîπËøáÁöÑÂõæÁâáÊñá‰ª∂Ôºö"
MODIFIED_IMG=$(find "$IMAGE_DIR" -type f \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' \) -newer "$TIMESTAMP_FILE")

if [ -n "$MODIFIED_IMG" ]; then
  echo "  ‰ª•‰∏ãÂõæÁâáÊñá‰ª∂Ë¢´Ê£ÄÊµãÂà∞‚ÄúÂ∑≤‰øÆÊîπ‚ÄùÔºö"
  echo "$MODIFIED_IMG"
  echo
  echo "  ‚ñ∂ Ë∞ÉÁî® '${COMPRESS_SCRIPT}' ËøõË°åÂéãÁº©‚Ä¶"
  pids=()
  while IFS= read -r imgfile; do
    [ -f "$imgfile" ] || continue
    python3 "$COMPRESS_SCRIPT" "$imgfile" &
    pids+=($!)
    echo "    ‚úî Â∑≤ÂêØÂä®ÂéãÁº©ÔºàÂêéÂè∞ÔºâÔºö${imgfile}"
  done <<< "$MODIFIED_IMG"
  for pid in "${pids[@]}"; do
    wait "$pid"
  done
  echo "  ‚Üí ÂõæÁâáÂπ∂Ë°åÂéãÁº©ÂÆåÊàê„ÄÇ"
else
  echo "  ‚ñ≤ ÊöÇÊó†ÂõæÁâáÊñá‰ª∂Ëá™‰∏äÊ¨°ÊûÑÂª∫‰ª•Êù•‰øÆÊîπÔºåË∑≥ËøáÊ≠§Ê≠•„ÄÇ"
fi

echo
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
echo "‚ñ∂ Step 3/6ÔºöÊ∏ÖÁêÜ public/Ôºà‰øùÁïô .git ÁõÆÂΩïÔºâ‚Ä¶"
if [ -d "$PUBLIC_DIR" ]; then
  # Âà†Èô§Èô§ .git ‰ª•Â§ñÁöÑÊâÄÊúâÊù°ÁõÆÔºàÂåÖÊã¨ÈöêËóèÊñá‰ª∂Ôºâ
  find "$PUBLIC_DIR" -mindepth 1 -exec bash -c '
    for path; do
      [ "$(basename "$path")" = ".git" ] || rm -rf "$path"
    done
  ' _ {} +
  echo "‚úî public/ Â∑≤Ê∏ÖÁ©∫Ôºà‰ªÖ‰øùÁïô .gitÔºâ„ÄÇ"
else
  mkdir -p "$PUBLIC_DIR"
fi

echo
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
echo "‚ñ∂ Step 4/6ÔºöËøêË°å Hugo ÁîüÊàê public/ ‚Ä¶"
hugo
echo "‚úî Hugo ÊûÑÂª∫ÂÆåÊàêÔºö'${PUBLIC_DIR}/' Â∑≤Êõ¥Êñ∞„ÄÇ"

echo
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
echo "‚ñ∂ Step 5/6ÔºöÊèê‰∫§Âπ∂Êé®ÈÄÅÂà∞ËøúÁ´Ø‰ªìÂ∫ì‚Ä¶"
cd "$PUBLIC_DIR"
git add -A
git commit -m "${COMMIT_MESSAGE}"
git push
git gc --aggressive
cd ..

echo
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
echo "‚ñ∂ Step 6/6ÔºöÊõ¥Êñ∞Êó∂Èó¥Êà≥Êñá‰ª∂‰æõ‰∏ãÊ¨°ËøêË°åÔºö"
touch "$TIMESTAMP_FILE"
echo "  ‚úî Â∑≤Â∞Ü '${TIMESTAMP_FILE}' Êó∂Èó¥Êõ¥Êñ∞‰∏∫ÂΩìÂâç„ÄÇ"

echo
echo "üéâ ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅÊâÄÊúâÊõ¥Êñ∞Â∑≤Êé®ÈÄÅ„ÄÇ"
